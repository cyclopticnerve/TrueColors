#!/usr/bin/env python
# ------------------------------------------------------------------------------
# Project : TrueColors                                             /          \
# Filename: truecolors                                            |     ()     |
# Date    : 01/03/2024                                            |            |
# Author  : cyclopticnerve                                        |   \____/   |
# License : WTFPLv2                                                \          /
# ------------------------------------------------------------------------------

"""
A script that coordinates Flatpaks GTK4 accent colors with the Ubuntu accent
colors selected in the Settings panel.
"""

# ------------------------------------------------------------------------------
# Imports
# ------------------------------------------------------------------------------
from pathlib import Path
import re
import shlex
import subprocess

# TODO: on stop service, delete files and call
# 'flatpak override --user --nofilesystem=xdg-config/gtk-4.0'

# TODO: uninstall:
#!/bin/sh
# echo "Uninstalling truecolors..."
# systemctl --user stop truecolors.service
# rm -v ~/.config/systemd/user/truecolors.service
# rm -v ~/.local/bin/truecolors
# echo "Uninstalled truecolors..."

# ------------------------------------------------------------------------------
# Constants
# ------------------------------------------------------------------------------
DICT_COLORS = {
    "Yaru": [
        "#ed754b",
        "#e95420",
    ],
    "Yaru-bark": [
        "#9a9a77",
        "#787859",
    ],
    "Yaru-sage": [
        "#889d8c",
        "#657b69",
    ],
    "Yaru-olive": [
        "#60aa01",
        "#4b8501",
    ],
    "Yaru-viridian": [
        "#04ad75",
        "#03875b",
    ],
    "Yaru-prussiangreen": [
        "#3ea7a4",
        "#308280",
    ],
    "Yaru-blue": [
        "#369bff",
        "#0073e5",
    ],
    "Yaru-purple": [
        "#9b8de2",
        "#7764d8",
    ],
    "Yaru-magenta": [
        "#c87ec8",
        "#b34cb3",
    ],
    "Yaru-red": [
        "#e67588",
        "#da3450",
    ],
}


# ------------------------------------------------------------------------------
# The main function of the program
# ------------------------------------------------------------------------------
def main():
    """
    The main function of the program
    """

    # call the one-time setup function
    init()

    # call the function that waits for a color change
    run()


# ------------------------------------------------------------------------------
# The one-time setup function
# ------------------------------------------------------------------------------
def init():
    """
    The one-time setup function
    """

    # set up flatpaks to use gtk-4.0 gtk.css
    cmd = "flatpak --user override --filesystem=xdg-config/gtk-4.0:ro"
    cmd_array = shlex.split(cmd)
    subprocess.run(cmd_array, check=True)

    # get initial theme
    cmd = "gsettings get org.gnome.desktop.interface gtk-theme"
    cmd_array = shlex.split(cmd)
    proc = subprocess.run(
        cmd_array, capture_output=True, text=True, check=True
    )

    # write the initial theme
    write_theme(proc.stdout)


# ------------------------------------------------------------------------------
#
# ------------------------------------------------------------------------------
def run():
    """
    docstring
    """

    # watch theme for change
    cmd = "gsettings monitor org.gnome.desktop.interface gtk-theme"
    cmd_array = shlex.split(cmd)
    proc = subprocess.Popen(
        cmd_array, stdout=subprocess.PIPE, universal_newlines=True
    )

    # whenever there is a theme change
    if proc and proc.stdout:
        for line in iter(proc.stdout.readline, ""):
            write_theme(line)


# ------------------------------------------------------------------------------
# The function that waits for a color change
# ------------------------------------------------------------------------------
def write_theme(theme_name):
    """
    The function that waits for a color change
    """

    # get theme name without 'dark' (and maybe without "gtk-theme")
    pattern = r"(gtk-theme: )?\'(.*?)(-dark|\')"
    res = re.search(pattern, theme_name)
    if res:
        theme_name = res.group(2)

    # initial sometimes is 'Adwaita'?
    # either way, ignore any theme that is not Yaru
    if not theme_name in DICT_COLORS:
        return

    # get colors from dict
    accent_color = DICT_COLORS[theme_name][0]
    accent_bg_color = DICT_COLORS[theme_name][1]

    # get file path to css file
    file = Path(Path.home() / ".config/gtk-4.0/gtk.css")
    file.parent.mkdir(exist_ok=True, parents=True)

    # write the props to the css file
    file.write_text(
        f"@define-color accent_color {accent_color};\n"
        f"@define-color accent_bg_color {accent_bg_color};\n",
        "utf8",
    )


# ------------------------------------------------------------------------------
# Code to run when called from command line
# ------------------------------------------------------------------------------
if __name__ == "__main__":
    # Code to run when called from command line

    # This is the top level code of the program, called when the Python file is
    # invoked from the command line.

    # run main function
    main()

# -)
